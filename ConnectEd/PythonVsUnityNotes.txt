Conclusions: Use Node.js

*************************************************************************************************


python app notes:


-python works well as a glue language
	-can implement parts that need more low level focus in C++ 
     "glue" modules together with python
-pure python should be ok for a simple app
-python code is much shorter and takes less time to develop than C++ code (for the most part
-python programs often 3-5 times shorter than Java, 5-10 times shorter than C++

I have experience with pyhton, although less than with C++, but the knowledge trasnfers over easily. Just need to look up syntax.

It is common to write the app in python and optimize when needed with lower level language like c++


*************************************************************************************************


Python vs node.js (source 1):

-Python is a language, Node.js is an environment that allows JS to be ran outside the browser
-js is faster performance wise
	-based on Chromes V8 browser (very fast)
	-much better for real-time apps
-js handles memory better
	-preffered for apps using 3d
-js not as good with CPU-intensive tasks
-node.js is event driven programming, allowing highly scalable without threading
-js and python should be equally as scalable
-python should be easier at handling exceptions, takes less time to debug

Node.js (superb speed/performance) ususally used for real time messaging, heavy load apps, content management solutions, marketplaces, ecommerce

ebay and linkdin use node.js

Python (consistency, stability, ease of use) scientific applications, big data solutions, government projects

Nasa uses python to develop software
	-https://da-14.com/blog/python-vs-nodejs-which-better-your-project


*************************************************************************************************

Python vs node.js (source 2):

-node.js
	-JS runtime environment designed to use JS to manage computing resources, file systems,
	and web app security
	-event driven programming
		-allows highly scalable servers without threading
	-allows multiple concurrent requests and operations vis asynchronous calls and non-blocking I/O
	-PROS
		1)- Fast server-side solution
			-Node.js supports only one thread
			-allow for maximizing usage of single CPU and computer memory, making
			servers faster and more productive
			-event-driven arch based on asynch calls allows Node.js servers to process more
			concurrent requests than most conventional multi-threaded servers
			-non-blocking I/O does not block program execution under heavy I/O workloads improves
			runtime performance of Node.js applications
		2)- One language on both the front and back end
			-perhaps not relevant for a unity frontend
		3)- scalable
			-Node clusters and workers are abstractions that can spawn additional Node.js processes
			depending on the workload of your app
	-CONS
		1)- less efficient with CPU-intensive operations
		2)- poor quality or lack of docs for some npm modules
	-USE CASES
		1)- chats
		2)- collaborative apps (video conferencing, doc editing, real time applications)
		3)- single page applications (involved heavy client side processing and rendering)
		4)- when performance and scalability are big concerns
		
-python
	-high-level, interpreted, object-oriented programming language with focus on readability
	and productivity
	-PROS
		1)- ease of use
		2)- fast development
		3)- rich standard library and ecosystem
	-CONS
		1)- absence from mobile computing and browsers
			-not well supported in mobile computing and browsers
			-if creating webb app, will need at least 2 different languages in stack
		2)- Lack of support for DSLs (Domain-specific languages)
			-harder to express UI code in python when compared to JS
		
	-USE CASES
		1) CPU intensive apps (JS not suitable for CPU intensive operations with graphics and data)
		2) When speed of development is important (rich standard lib and modules out of the box)
		3) IoT programming
	-https://www.netguru.co/blog/node.js-vs-python-comparison-which-solution-to-choose-for-your-next-project